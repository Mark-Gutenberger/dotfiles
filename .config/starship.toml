#! ~/.config/starship.toml

'$schema' = 'https://starship.rs/config-schema.json'

add_newline = false
command_timeout = 2000
scan_timeout = 500

format = """\
[$time on ${custom.OS} ](bold white)$memory_usage$cmd_duration
$battery\
$sudo$username\
$hostname\
$shlvl\
$singularity\
[\\(](fg:213)$directory$git_branch$git_status$docker_context[\\) ](fg:213)\
$aws$gcloud$openstack$azure$container$kubernetes\
$package\
$dart$deno$dotnet$elixir$elm$erlang$golang$haskell$helm$java$julia$kotlin$buf$c$cmake$cobol$lua$nim$nodejs$ocaml$perl$php$pulumi$purescript$python$rlang$red$ruby$rust$scala$swift$terraform$crystal$vlang$spack$vagrant$zig$nix_shell$conda\
$env_var\
$jobs\
$status
$shell$character"""

[custom.OS]
command = 'echo $OS'
disabled = false
format = '[$output]($style)'
shell = 'sh'
style = 'bold 26'
when = true

[time]
disabled = false
format = '[$time]($style)'
style = 'bold 250'
time_format = '%T'
utc_time_offset = '-5'

[sudo]
allow_windows = true
disabled = false
format = '[Ôàõ ]($style)'
style = 'bold 166'

[username]
disabled = false
format = '[Ôàõ ]($style)'
style_root = 'bold 166'

[c]
detect_extensions = [
  'h',
  'hh',
  'hpp',
  'H',
  'HH',
  'HPP',
  'c',
  'cc',
  'cpp',
  'C',
  'CC',
  'CPP',
  'CXX',
  'cxx',
  'hxx',
  'HXX',
]
disabled = false
format = 'via [$symbol($name )]($style)'
style = 'bold 206'
symbol = 'Óòù '

[[battery.display]]
charging_symbol = 'ÔñÖ '
discharging_symbol = 'Ôïπ '
style = 'bold red'
threshold = 10

[[battery.display]]
charging_symbol = 'ÔñÖ '
discharging_symbol = 'Ôï∫ '
style = 'bold red'
threshold = 20

[[battery.display]]
charging_symbol = 'ÔñÜ '
discharging_symbol = 'Ôïª '
style = 'bold 202'
threshold = 30

[[battery.display]]
charging_symbol = 'Ôñá '
discharging_symbol = 'Ôïº '
style = 'bold 214'
threshold = 40

[[battery.display]]
charging_symbol = 'Ôñá '
discharging_symbol = 'ÔïΩ '
style = 'bold yellow'
threshold = 50

[[battery.display]]
charging_symbol = 'Ôñà '
discharging_symbol = 'Ôïæ '
style = 'bold 190'
threshold = 60

[[battery.display]]
charging_symbol = 'Ôñà '
discharging_symbol = 'Ôïø '
style = 'bold 190'
threshold = 70

[[battery.display]]
charging_symbol = 'Ôñâ '
discharging_symbol = 'ÔñÄ '
style = 'bold green'
threshold = 80

[[battery.display]]
charging_symbol = 'Ôñä '
discharging_symbol = 'ÔñÅ '
style = 'bold green'
threshold = 90

[[battery.display]]
charging_symbol = 'ÔñÑ '
discharging_symbol = 'Ôï∏ '
style = 'bold green'
threshold = 100

[memory_usage]
disabled = false
format = '[ $symbol ${ram_pct}]($style) '
style = 'bold dimmed green'
symbol = 'Ô°ö '
threshold = 85

[directory]
format = '[$path]($style)'
truncation_length = 5
truncation_symbol = 'Ôû° '
use_os_path_sep = true

[shell]
bash_indicator = 'bash'
cmd_indicator = 'cmd'
disabled = false
fish_indicator = 'fish'
powershell_indicator = 'pwsh'
unknown_indicator = 'mystery shell'

[character]
error_symbol = '[‚ùØ](bold red)'
success_symbol = '[‚ùØ](bold green)'

[aws]
symbol = 'ÓåΩ '

[git_status]
ahead = 'Ôïù'
behind = 'ÔïÖ'
conflicted = 'C'
deleted = 'D'
disabled = false
diverged = 'ÔïùÔïÖ'
format = '[$conflicted](bold red)[$untracked](bold 34)[$stashed](bold 178)[$modified](bold 178)[$staged](bold 34)[$renamed](bold 178)[$deleted](bold red)[$ahead_behind](bold purple)'
ignore_submodules = true
modified = 'M'
renamed = 'R'
staged = '+'
stashed = '$'
untracked = 'U'
up_to_date = ''

[git_branch]
always_show_remote = true
format = '[ $symbol$branch(:$remote_branch)]($style) '
style = 'bold 164'
symbol = 'Ôêò '
truncation_length = 15
truncation_symbol = '‚Ä¶'

[buf]
format = 'via [$symbol]($style)'

[cmake]
format = 'via [$symbol]($style)'
symbol = 'Ô®∂ '

[cobol]
format = 'via [$symbol]($style)'

[crystal]
format = 'via [$symbol]($style)'

[dart]
format = 'via [$symbol]($style)'

[deno]
format = 'via [$symbol]($style)'

[dotnet]
format = '[$symbol(üéØ $tfm )]($style)'

[elixir]
format = 'via [$symbol]($style)'

[elm]
format = 'via [$symbol]($style)'

[erlang]
format = 'via [$symbol]($style)'

[golang]
format = 'via [$symbol]($style)'

[helm]
format = 'via [$symbol]($style)'

[julia]
format = 'via [$symbol]($style)'

[kotlin]
format = 'via [$symbol]($style)'

[lua]
format = 'via [$symbol]($style)'

[nim]
format = 'via [$symbol]($style)'

[nodejs]
detect_extensions = []
detect_files = ['package.json', 'package-lock.json', 'yarn.lock']
detect_folders = ['node_modules']
format = 'via [$symbol]($style)'
style = 'bold green'

[ocaml]
format = 'via [$symbol(\($switch_indicator$switch_name\) )]($style)'

[perl]
format = 'via [$symbol]($style)'

[php]
format = 'via [$symbol]($style)'

[pulumi]
format = 'via [$symbol$stack]($style)'

[purescript]
format = 'via [$symbol]($style)'

[python]
format = 'via [$symbol]($style)'

[red]
format = 'via [$symbol]($style)'

[rlang]
format = 'via [$symbol]($style)'

[ruby]
format = 'via [$symbol]($style)'

[rust]
format = 'via [$symbol]($style)'

[swift]
format = 'via [$symbol]($style)'

[vagrant]
format = 'via [$symbol]($style)'

[vlang]
format = 'via [$symbol]($style)'

[zig]
format = 'via [$symbol]($style)'
